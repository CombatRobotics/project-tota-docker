# syntax=docker/dockerfile:1.4
ARG UBUNTU_BASE_IMAGE=ubuntu-cv:latest
FROM ${UBUNTU_BASE_IMAGE} AS base

ENV DEBIAN_FRONTEND=noninteractive
ENV LANG=en_US.UTF-8
ENV LC_ALL=en_US.UTF-8
ENV ROS_DISTRO=humble

RUN curl -fsSL -o /tmp/ros2-apt-source.deb \
        https://github.com/ros-infrastructure/ros-apt-source/releases/download/1.1.0/ros2-apt-source_1.1.0.$(lsb_release -cs)_all.deb && \
    apt-get update && \
    apt-get install -y --no-install-recommends /tmp/ros2-apt-source.deb && \
    rm -f /tmp/ros2-apt-source.deb && \
    rm -rf /var/lib/apt/lists/*

RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        ros-${ROS_DISTRO}-ros-base \
        python3-argcomplete \
        python3-rosdep && \
    rm -rf /var/lib/apt/lists/*

RUN rosdep init || true

ENV DEBIAN_FRONTEND=

FROM base AS dev

ENV DEBIAN_FRONTEND=noninteractive

ARG TARGETARCH
ARG GZ_ROS2_CONTROL_WS=/opt/gz_ros2_control_ws
ARG USERNAME=devuser
ARG USER_UID=1000
ARG USER_GID=1000

RUN --mount=type=cache,target=/var/cache/apt,sharing=locked \
    --mount=type=cache,target=/var/lib/apt/lists,sharing=locked \
    bash -c 'set -euo pipefail; \
    rm -f /var/lib/dpkg/lock-frontend /var/cache/apt/archives/lock && \
    apt-get update && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
    curl wget gnupg lsb-release ca-certificates \
    build-essential cmake git \
    sudo \
    python3-colcon-common-extensions \
    python3-rosdep \
    python3-vcstool \
    python3-pip \
    libgl1-mesa-glx \
    libgl1-mesa-dri \
    libglvnd0 \
    libgl1 \
    libglx0 \
    libegl1 \
    libgles2 \
    libxcb-xfixes0 \
    mesa-utils \
    libvulkan1 \
    libxext6 \
    libx11-xcb1 \
    libxcb-glx0 \
    libxcb-dri2-0 \
    libxcb-dri3-0 \
    libxcb-present0 \
    libxcb-sync1 \
    && rm -rf /var/lib/apt/lists/*'

RUN --mount=type=cache,target=/var/cache/apt,sharing=locked \
    --mount=type=cache,target=/var/lib/apt/lists,sharing=locked \
    bash -c 'set -euo pipefail; \
    if [ "$TARGETARCH" = "amd64" ]; then \
        wget https://packages.osrfoundation.org/gazebo.gpg -O /usr/share/keyrings/pkgs-osrf-archive-keyring.gpg && \
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/pkgs-osrf-archive-keyring.gpg] http://packages.osrfoundation.org/gazebo/ubuntu-stable $(lsb_release -cs) main" > /etc/apt/sources.list.d/gazebo-stable.list && \
        rm -f /var/lib/dpkg/lock-frontend /var/cache/apt/archives/lock && \
        apt-get update && \
        DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
        gz-harmonic && \
        rm -rf /var/lib/apt/lists/*; \
    fi'

RUN --mount=type=cache,target=/var/cache/apt,sharing=locked \
    --mount=type=cache,target=/var/lib/apt/lists,sharing=locked \
    bash -c 'set -euo pipefail; \
    if [ "$TARGETARCH" = "amd64" ]; then \
        rm -f /var/lib/dpkg/lock-frontend /var/cache/apt/archives/lock && \
        apt-get update && \
        DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
        ros-humble-ros-gzharmonic \
        ros-humble-controller-interface \
        ros-humble-controller-manager \
        ros-humble-hardware-interface \
        ros-humble-pluginlib \
        ros-humble-ros2-control \
        ros-humble-ros2-controllers \
        ros-humble-control-msgs \
        ros-humble-xacro \
        ros-humble-robot-state-publisher \
        ros-humble-joint-state-broadcaster \
        ros-humble-joint-state-publisher \
        && rm -rf /var/lib/apt/lists/*; \
    fi'

RUN --mount=type=cache,target=/var/cache/apt,sharing=locked \
    --mount=type=cache,target=/var/lib/apt/lists,sharing=locked \
    bash -c 'set -euo pipefail; \
    if [ "$TARGETARCH" = "amd64" ]; then \
        rm -f /var/lib/dpkg/lock-frontend /var/cache/apt/archives/lock && \
        apt-get update && \
        DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
        libgz-sim8-dev \
        libgz-plugin2-dev \
        libgz-transport13-dev \
        libgz-msgs10-dev \
        libgz-math7-dev \
        libgz-cmake3-dev \
        libgz-common5-dev \
        libgz-tools2-dev \
        && rm -rf /var/lib/apt/lists/*; \
    fi'

RUN if [ "$TARGETARCH" = "amd64" ]; then \
        mkdir -p ${GZ_ROS2_CONTROL_WS}/src && \
        cd ${GZ_ROS2_CONTROL_WS}/src && \
        git clone https://github.com/ros-controls/gz_ros2_control.git -b humble && \
        cd ${GZ_ROS2_CONTROL_WS} && \
        /bin/bash -c "source /opt/ros/${ROS_DISTRO}/setup.bash && \
        export GZ_VERSION=harmonic && \
        rosdep update && \
        rosdep install --from-paths src --ignore-src -r -y && \
        colcon build --cmake-args -DCMAKE_BUILD_TYPE=Release"; \
    fi

RUN echo "source /opt/ros/${ROS_DISTRO}/setup.bash" >> /etc/bash.bashrc
RUN if [ "$TARGETARCH" = "amd64" ]; then \
        echo "export GZ_VERSION=harmonic" >> /etc/bash.bashrc && \
        echo "source ${GZ_ROS2_CONTROL_WS}/install/setup.bash" >> /etc/bash.bashrc; \
    fi

RUN --mount=type=cache,target=/var/cache/apt,sharing=locked \
    --mount=type=cache,target=/var/lib/apt/lists,sharing=locked \
    rm -f /var/lib/dpkg/lock-frontend /var/cache/apt/archives/lock && apt-get update

RUN groupadd --gid ${USER_GID} ${USERNAME} && \
    useradd --uid ${USER_UID} --gid ${USER_GID} -m ${USERNAME} -s /bin/bash && \
    echo ${USERNAME} ALL=\(root\) NOPASSWD:ALL > /etc/sudoers.d/${USERNAME} && \
    chmod 0440 /etc/sudoers.d/${USERNAME} && \
    usermod -aG dialout,video ${USERNAME} && \
    (groupadd -f render && usermod -aG render ${USERNAME} || true)

RUN mkdir -p /home/${USERNAME}/.config/Ultralytics && \
    chown -R ${USERNAME}:${USERNAME} /home/${USERNAME}/.config

USER ${USERNAME}
WORKDIR /home/${USERNAME}

SHELL ["/bin/bash", "-c"]
CMD ["/bin/bash"]

ENV DEBIAN_FRONTEND=
